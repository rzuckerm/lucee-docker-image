#!/usr/bin/env python3
import html
import os
import re
import subprocess
import time
import urllib.parse
import urllib.request
import shutil
import sys


def get_server_pids():
    processes = subprocess.check_output(["ps", "-ef"], encoding="utf-8")
    pids = {}
    for line in processes.splitlines():
        items = line.split()
        if "/opt/java/openjdk/bin/java" in items:
            pids["java"] = items[1]

    return pids


def main():
    program_name = sys.argv[1]
    if not os.path.exists(program_name):
        sys.exit(program_name + " not found")

    shutil.copy(program_name, f"/var/www/{program_name}")

    subprocess.check_call("catalina.sh run >/dev/null 2>&1 &", shell=True)
    pids = {}
    for _ in range(20):
        time.sleep(0.1)
        pids = get_server_pids()
        if len(pids) >= 1:
            break
    else:
        sys.exit("Server never started")

    argv = sys.argv[2:]
    argc = len(argv)
    params = {"argc": argc}
    params.update({"argv" + str(n + 1): arg for n, arg in enumerate(argv)})
    url = f"http://localhost:8888/{program_name}?" + urllib.parse.urlencode(params)
    exc = None
    for _ in range(100):
        time.sleep(0.1)
        try:
            content = urllib.request.urlopen(url).read().decode("utf-8")
            match = re.search(r"<pre>(.*)</pre>", content, flags=re.DOTALL)
            if match:
                print(html.unescape(match.group(1).replace("<br>", "\n")), end="")
                exc = None
                break
        except IOError as e:
            exc = e

    subprocess.call(["catalina.sh", "stop"], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    for _ in range(100):
        time.sleep(0.1)
        pids = get_server_pids()
        if "java" not in pids:
            break
    else:
        sys.exit("Could not stop server")

    if exc:
        sys.exit(str(exc))


if __name__ == "__main__":
    main()
